name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
        # dotnet buildjobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['3.1.x']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'  
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: dotnet build # <my project>
    - run: dotnet test
    - run: npm install
      working-directory: ./DotnetTemplate.Web
    - run: npm run build
      working-directory: ./DotnetTemplate.Web
    - run: npm t
      working-directory: ./DotnetTemplate.Web
    - run: npm run lint
      working-directory: ./DotnetTemplate.Web
    - name: Slack Notification
      # uses: rtCamp/action-slack-notify@v2
      uses: 8398a7/action-slack@v3
      with:
        status: custom # ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        custom_payload: |
          {
            attachments: [{
            color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
            text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always() # Pick up events even if the job fails or is canceled.
      # env:
      #   SLACK_TITLE: Post Title
      #   SLACK_USERNAME: Tim Cook
      #   SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # jobs:
  # build:
    # name: Build and test
    # runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    # steps:
    # - uses: actions/checkout@v2 # Adds a step to checkout the repository code
